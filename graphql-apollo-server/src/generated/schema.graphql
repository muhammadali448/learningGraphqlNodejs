### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Comment {
  author: User!
  createdAt: DateTime!
  id: ID!
  post: Post!
  text: String!
  updatedAt: DateTime!
}

enum CommentOrderByInput {
  createdAt_ASC
  createdAt_DESC
  text_ASC
  text_DESC
}

input createCommentInput {
  text: String!
}

input createPostInput {
  content: String!
  title: String!
}

scalar DateTime

input loginInput {
  email: String!
  password: String!
}

type Mutation {
  createComment(createCommentInput: createCommentInput!, postId: ID!): Comment!
  createPost(createPostInput: createPostInput!): Post!
  deleteComment(id: ID!): Comment!
  deletePost(id: ID!): Post!
  deleteUser(id: ID!): User!
  login(loginInput: loginInput!): AuthPayload!
  signup(signupInput: signupInput!): AuthPayload!
  updateComment(id: ID!, updateCommentInput: updateCommentInput!): Comment!
  updatePost(id: ID!, updatePostInput: updatePostInput!): Post!
  updateUser(updateUserInput: updateUserInput!): User!
}

type Post {
  author: User!
  comments: [Comment!]
  content: String
  createdAt: DateTime!
  id: ID!
  isPublished: Boolean!
  title: String!
}

type Query {
  allComments(orderBy: CommentOrderByInput): [Comment!]!
  allPosts(searchString: String): [Post!]!
  allUsers(searchNameString: String): [User!]!
  myPosts(searchString: String): [Post!]!
  myProfile: User!
  postById(id: ID!): Post!
}

input signupInput {
  email: String!
  name: String!
  password: String!
}

input updateCommentInput {
  text: String
}

input updatePostInput {
  content: String
  isPublished: Boolean
  title: String
}

input updateUserInput {
  email: String
  name: String
  password: String
}

type User {
  comments: [Comment!]
  email: String!
  id: ID!
  name: String!
  posts: [Post!]
}
